깃 허브 _ 코딩 트레인 _강좌

[1강 / 2강]
1. Git이 무엇 인가

깃 이전 | 별도의 파일을 따로 저장 해야함
깃 | 모든 과정을 다 저장함, 협업을위한 정교한 것
-구글 문서과 비슷한 것 같음, 모든 과정을 다 저장함
-파일 기록 추적도 가능함

2. 깃과 깃허브 차이
깃 : 버전 관리 소프트 웨어
깃허브 : 웹사이트 | 웹 서비스

3. Repo : 새 저장소
-redeme 저장

4. new file
poem.txt

5. 커밋 =  save

6. edit / history
- 어떤게 변경 되었는 지 알 수 있음 (내가 써야함)
- 약간 메모장 같이 쓰면 좋을 듯

7. brunch의 개념
- master(main)라는 큰 저장소를 똑같이 복제해서 여러 시도를 가능하게 한다.
- 예시
rainbow ( main )
unicorn ( brunch 1 ) - 유니콘이 추가됨
pony ( brunch 2 ) - 유니콘 이름이 추가된 가지

-병합도 가능함 (비교하고 요청을 끌어올리기)
unicorn을 rainbow랑 결합하기를 신청하면 rainbow로 합쳐짐을 볼 수 있다
Q1. 만약 같은 행에 다른 내용이 있다면?
Q2. 메인과 가지에서 조금씩 변경이 되어 있는 상태에서 결합이 된다면?
- 메인으로 결합된다.
// 그 상태로 결합을 하면 아래  +1 이런식으로 뒤에 같은 행에 다른 내용이 뜬다.
- 아, 아니였다. 내가 커밋을 클릭했기 때문에 뭐가 변경되었는 지 추가로 뜬걸 보고 착각함
- 메인과 결합되는 게 맞다. 분기를 메인으로 결합을 하면, 이상하게 분기에 썼던 내용이 메인이 되어버린다.

8. Fork 포크 / Pull request
- 코어 버전에 영향을 주지 않고 그대로를 복제하는 것
- pull request를 하면 " 내가 보내고 싶다. 받아 달라 " 승낙을 하는 것은 코어 버전 소유자가 결정
- Fork 버튼을 누르면 내 계정으로 복제된다. 어디서 포크했는 지 알려준다.
Q3. pull request를 하면 어떻게 될까?

9. Git 허브 이슈
- isuues
의견을 남기는 부분
기능에 대한 질문
문제 및 버그
주제 토론
- 사진도 드래그 해서 넣을 수 있음
- 할당도 가능
- 문제가 해결될 때까지 열려있음
- 문제를 제기한 사람만 closed를 할 수 있음
- 문제에 관련된 #10 코드를 수정했다고 쓸 수 있음 ( 수정에서 ) this fixes #10으로 하면 자동으로 닫힌다.
Q4. 만약 같은 문제를 제기한다면, 혹은 코드를 써서 문제를 제기한다면

10.git bash / 터미널
[명령어]
- cd
- pwd 원래 나를 설정한 것
- is
- clear
- 굳이 배울 필요가 없는 것 같아서 생략

11. 오우 수정을 해볼까?
